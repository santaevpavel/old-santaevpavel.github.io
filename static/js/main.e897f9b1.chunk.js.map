{"version":3,"sources":["HomeView.js","CvView.js","App.js","serviceWorker.js","index.js"],"names":["Content","Header","Sider","HomeView","react_default","a","createElement","layout","className","src","style","width","height","background","margin","padding","avatar","size","icon","type","Component","CvView","CvView_Content","tag","timeline","Item","dot","theme","App","handleClick","e","console","log","key","scrollToComponent","_this","refHeader1","align","refHeader2","refHeader3","refHeader4","alert","_this2","this","App_Header","position","zIndex","menu","onClick","mode","defaultSelectedKeys","lineHeight","App_Content","src_HomeView","src_CvView","class","ref","header","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e897f9b1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Avatar\r\n} from 'antd';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nclass HomeView extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content>\r\n          <img src=\"./img.png\" style={{ width: '100%', height: 'auto' }}/>\r\n          <Layout className=\"layout\" style={{\r\n              background: '#fff', width: 'auto', height: 'auto',\r\n              margin: '2em 24em 2em 24em',\r\n              padding: '2em'\r\n          }}>\r\n            <Sider style={{ background: '#fff' }}>\r\n              <Avatar size={150} src=\"https://pp.userapi.com/c844720/v844720911/523fa/diye7SaxlfU.jpg\"/>\r\n            </Sider>\r\n            <Content className=\"content\" style={{ background: '#fff' }}>\r\n              <div>\r\n                <h2>Santaev Pavel</h2>\r\n                <b><text>Android Engeneer at Sibext Ltd.</text></b>\r\n                <br/>\r\n                <Icon type=\"environment\"/><text>Novosibirsk, Russia.</text>\r\n              </div>\r\n            </Content>\r\n          </Layout>\r\n      </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Timeline, Tag, Card\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass CvView extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content style={{\r\n            background: '#fff', width: 'auto', height: 'auto',\r\n            margin: '0em 24em 8em 24em',\r\n            padding: '2em'\r\n        }}>\r\n          <h2>Key skills</h2>\r\n          <h2>Technologies, Tools</h2>\r\n          <div>\r\n            <Tag>Android</Tag>\r\n            <Tag>Gradle</Tag>\r\n            <Tag>GitLab CI</Tag>\r\n            <Tag>Java</Tag>\r\n            <Tag>Kotlin</Tag>\r\n          </div>\r\n          <br/>\r\n          <h2>Education</h2>\r\n          <Timeline>\r\n            <Timeline.Item dot={<Icon type=\"book\" theme=\"outlined\"/>}>\r\n              <text>2015-2017</text>\r\n              <br/>\r\n              <b>Новосибирский национальный исследовательский государственный университет (НГУ), Новосибирск.</b>\r\n              <br/>\r\n              Информационных технологий, Информатика и вычислительная техника\r\n            </Timeline.Item>\r\n            <Timeline.Item dot={<Icon type=\"book\" theme=\"outlined\"/>}>\r\n              <text>2011-2015</text>\r\n              <br/>\r\n              <b>Новосибирский национальный исследовательский государственный университет (НГУ), Новосибирск.</b>\r\n              <br/>\r\n              Информационных технологий, Информатика и вычислительная техника\r\n            </Timeline.Item>\r\n          </Timeline>\r\n          <h2>Work experience</h2>\r\n          <br/>\r\n          <Timeline>\r\n            <Timeline.Item>Create a services site 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Solve initial network problems 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Technical testing 2015-09-01</Timeline.Item>\r\n            <Timeline.Item>Network problems being solved 2015-09-01</Timeline.Item>\r\n          </Timeline>\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CvView;\r\n","import React, { Component } from 'react';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\n//import \"antd/dist/antd.css\";\r\nimport './App.css';\r\n\r\nimport HomeView from './HomeView.js';\r\nimport CvView from './CvView.js';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  handleClick = (e) => {\r\n    console.log('click ', e);\r\n    switch (e.key) {\r\n      case '1':\r\n        scrollToComponent(this.refHeader1, { align: 'top' });\r\n        break;\r\n      case '2':\r\n        scrollToComponent(this.refHeader2, { align: 'top' });\r\n        break;\r\n      case '3':\r\n        scrollToComponent(this.refHeader3, { align: 'top' });\r\n        break;\r\n      case '4':\r\n        scrollToComponent(this.refHeader4, { align: 'top' });\r\n        break;\r\n      default:\r\n        alert(\"Illegal id \" + e.key)\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header className=\"header\"\r\n          style={{ position: 'top', zIndex: 1, width: '100%', height: '0px',\r\n            background: '#000000ff' }}>\r\n          <Menu\r\n            onClick={this.handleClick}\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['1']}\r\n            style={{ lineHeight: '64px', background: '#00000000', padding: '0em 24em 0em 24em', width: '100%' }}>\r\n              <Menu.Item key=\"1\">Home</Menu.Item>\r\n              <Menu.Item key=\"2\">Portfolio</Menu.Item>\r\n              <Menu.Item key=\"3\">Contacts</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content>\r\n          <HomeView/>\r\n          <CvView/>\r\n          <Layout class=\"ContentStyle\">\r\n            <h1 ref={(header) => this.refHeader1 = header}>Header 1</h1>\r\n            <img src=\"https://4apk.ru/wp-content/uploads/2018/02/android-1.jpg\"/>\r\n          </Layout>\r\n          <Layout class=\"ContentStyle\">\r\n            <h1 ref={(header) => this.refHeader2 = header}>Header 2</h1>\r\n            <img src=\"https://4apk.ru/wp-content/uploads/2018/02/android-1.jpg\"/>\r\n          </Layout>\r\n          <Layout class=\"ContentStyle\">\r\n            <h1 ref={(header) => this.refHeader3 = header}>Header 3</h1>\r\n            <img src=\"https://4apk.ru/wp-content/uploads/2018/02/android-1.jpg\"/>\r\n          </Layout>\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}