{"version":3,"sources":["HomeView.js","CvView.js","ContactsView.js","App.js","serviceWorker.js","index.js"],"names":["Sider","Header","Content","HomeView","react_default","a","createElement","layout","className","src","style","width","height","background","avatar","size","this","props","data","name","profession","icon","type","location","Component","CvView","dangerouslySetInnerHTML","__html","about","technologies","map","tag","es_tag","timelines","educations","education","timeline","Item","dot","theme","date","university","direction","experiences","workExperiances","experience","title","CvView_Content","getAbout","getTechnologies","getEducations","getWorkExperiances","ContactsView","contacts","contact","href","link","ContactsView_Content","marginBottom","getContacts","App","handleClick","e","console","log","key","scrollToComponent","_this","refHeader1","align","refHeader2","refHeader3","alert","_this2","App_Header","menu","onClick","mode","defaultSelectedKeys","App_Content","src_HomeView","itemHome","ref","header","src_CvView","itemCV","src_ContactsView","itemContacts","back_top","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8491fc02.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Avatar\r\n} from 'antd';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass HomeView extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content>\r\n          <img src=\"./img.jpg\" style={{ width: '100%', height: 'auto' }}/>\r\n          <Layout className=\"ContentBlock\">\r\n            <Layout className=\"layout\">\r\n              <Sider style={{ background: '#fff' }}>\r\n                <Avatar size={150} src=\"https://pp.userapi.com/c844720/v844720911/523fa/diye7SaxlfU.jpg\"/>\r\n              </Sider>\r\n              <Content className=\"content\" style={{ background: '#fff' }}>\r\n                <div>\r\n                  <h2>{this.props.data.name}</h2>\r\n                  <b><text>{this.props.data.profession}</text></b>\r\n                  <br/>\r\n                  <Icon type=\"environment\"/><text>{this.props.data.location}</text>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n      </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Timeline, Tag, Card\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass CvView extends Component {\r\n\r\n  getAbout() {\r\n    return (\r\n      <div>\r\n        <td dangerouslySetInnerHTML={{__html: this.props.data.about}} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getTechnologies() {\r\n    return this.props.data.technologies.map(tag => <Tag>{ tag }</Tag>)\r\n  }\r\n\r\n  getEducations() {\r\n    var timelines = this.props.data.educations.map(education =>\r\n      (\r\n        <Timeline.Item dot={<Icon type=\"book\" theme=\"outlined\"/>}>\r\n        <text>{education.date}</text>\r\n        <br/>\r\n        <b>{education.university}</b>\r\n        <br/>\r\n        {education.direction}\r\n      </Timeline.Item>\r\n      )\r\n    );\r\n    return (\r\n      <Timeline>{timelines}</Timeline>\r\n    );\r\n  }\r\n\r\n  getWorkExperiances() {\r\n    var experiences = this.props.data.workExperiances.map(experience =>\r\n      (\r\n        <Timeline.Item dot={<Icon type=\"laptop\" theme=\"outlined\"/>}>\r\n        <text>{experience.date}</text>\r\n        <br/>\r\n        <b>{experience.title}</b>\r\n        <br/>\r\n        {<td dangerouslySetInnerHTML={{__html: experience.about}} />}\r\n      </Timeline.Item>\r\n      )\r\n    );\r\n    return (\r\n      <Timeline>{experiences}</Timeline>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content className=\"ContentBlock\">\r\n          <h2>About</h2>\r\n          { this.getAbout() }\r\n          <br/>\r\n          <h2>Key skills</h2>\r\n          <h2>Technologies, Tools</h2>\r\n          <div>\r\n            { this.getTechnologies() }\r\n          </div>\r\n          <br/>\r\n          <h2>Education</h2>\r\n            { this.getEducations() }\r\n          <br/>\r\n          <h2>Work experience</h2>\r\n          { this.getWorkExperiances() }\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CvView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon\r\n} from 'antd';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nclass ContactsView extends Component {\r\n\r\n  getContacts() {\r\n    var contacts = this.props.data.map(contact =>\r\n      (\r\n        <div>\r\n          <Icon type={contact.icon} theme=\"outlined\"/>\r\n          <text> </text>\r\n          <a href={contact.link}>{contact.title}</a>\r\n          <br/>\r\n        </div>\r\n      )\r\n    );\r\n    return (\r\n      <div>{contacts}</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content className=\"ContentBlock\" style={{ marginBottom: \"50px\" }}>\r\n          <h2>Contacts</h2>\r\n          <div>\r\n            { this.getContacts() }\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsView;\r\n","import React, { Component } from 'react';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\nimport './App.css';\r\nimport data from './data.json';\r\n\r\nimport HomeView from './HomeView.js';\r\nimport CvView from './CvView.js';\r\nimport ContactsView from './ContactsView.js';\r\n\r\nimport {\r\n  Layout, Menu, Icon, BackTop\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  handleClick = (e) => {\r\n    console.log('click ', e);\r\n    switch (e.key) {\r\n      case '1':\r\n        scrollToComponent(this.refHeader1, { align: 'top' });\r\n        break;\r\n      case '2':\r\n        scrollToComponent(this.refHeader2, { align: 'top' });\r\n        break;\r\n      case '3':\r\n        scrollToComponent(this.refHeader3, { align: 'top' });\r\n        break;\r\n      default:\r\n        alert(\"Illegal id \" + e.key)\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Header className=\"Header\">\r\n          <Menu\r\n            className=\"AppMenu\"\r\n            onClick={this.handleClick}\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\">Home</Menu.Item>\r\n              <Menu.Item key=\"2\">Portfolio</Menu.Item>\r\n              <Menu.Item key=\"3\">Contacts</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content>\r\n          <HomeView data={data.itemHome} ref={(header) => this.refHeader1 = header}/>\r\n          <CvView data={data.itemCV} ref={(header) => this.refHeader2 = header}/>\r\n          <ContactsView data={data.itemContacts} ref={(header) => this.refHeader3 = header}/>\r\n          <BackTop/>\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}