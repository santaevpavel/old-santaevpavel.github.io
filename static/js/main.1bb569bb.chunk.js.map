{"version":3,"sources":["HomeView.js","CvView.js","ContactsView.js","ProjectsView.js","App.js","serviceWorker.js","index.js"],"names":["Sider","Header","Content","HomeView","react_default","a","createElement","layout","className","dist_default","src","placeholder","loading","alt","style","color","fontSize","this","props","data","header","title","subtitle","background","tooltip","avatar","size","name","profession","icon","type","location","Component","CvView","dangerouslySetInnerHTML","__html","about","keySkills","advanced","map","tag","es_tag","basic","technologies","timelines","educations","education","timeline","Item","dot","theme","date","university","direction","experiences","workExperiances","experience","join","langs","languages","lang","level","CvView_Content","getAbout","getSkills","getEducations","getWorkExperiances","getLanguages","getTechnologies","ContactsView","ym","_this","contacts","contact","href","link","onClick","e","onClickContact","ContactsView_Content","marginBottom","getContacts","ProjectsView","row","col","span","paddingRight","width","divider","ProjectsView_Content","getProjects","App","handleClick","console","log","key","scrollToComponent","refHeader1","align","refHeader2","refHeader3","refHeader4","alert","_this2","lib","accounts","App_Header","menu","mode","defaultSelectedKeys","App_Content","minWidth","src_HomeView","itemHome","ref","src_CvView","itemCV","src_ProjectsView","itemProjects","src_ContactsView","itemContacts","back_top","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bb569bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ProgressiveImage  from 'react-progressive-image';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Avatar, Tooltip\r\n} from 'antd';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nclass HomeView extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content>\r\n          <div className=\"Container\">\r\n            <ProgressiveImage\r\n              src=\"./img.jpg\"\r\n              placeholder=\"./img-tiny.jpg\">\r\n                {(src, loading) => {\r\n                  return <img src={src} alt=\"an image\" className=\"HeaderImage\"/>\r\n                }}\r\n            </ProgressiveImage>\r\n            <div className=\"Centered\">\r\n              <div className=\"HomeTextContent\">\r\n                <text style={{ color: 'white', fontSize: '80px' }}>{this.props.data.header.title}</text>\r\n                <text style={{ color: '#fffa', fontSize: '40px' }}>{this.props.data.header.subtitle}</text>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Layout className=\"ContentBlock\">\r\n            <Layout className=\"layout\">\r\n              <Sider style={{ background: '#fff' }}>\r\n                <Tooltip title=\"He is me!\">\r\n                  <Avatar size={150} src=\"https://pp.userapi.com/c844720/v844720911/523fa/diye7SaxlfU.jpg\"/>\r\n                </Tooltip>\r\n              </Sider>\r\n              <Content className=\"content\" style={{ background: '#fff' }}>\r\n                <div>\r\n                  <h2>{this.props.data.name}</h2>\r\n                  <b><text>{this.props.data.profession}</text></b>\r\n                  <br/>\r\n                  <Icon type=\"environment\"/><text>{this.props.data.location}</text>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n      </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Timeline, Tag, Card\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass CvView extends Component {\r\n\r\n  getAbout() {\r\n    return (\r\n      <div>\r\n        <td dangerouslySetInnerHTML={{__html: this.props.data.about}} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getSkills() {\r\n    return (\r\n      <div>\r\n        <h3>Advanced skills:</h3>{ this.props.data.keySkills.advanced.map(tag => <Tag>{ tag }</Tag>) }\r\n        <br/><br/>\r\n        <h3>Basic skills:</h3>{ this.props.data.keySkills.basic.map(tag => <Tag>{ tag }</Tag>) }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getTechnologies() {\r\n    return this.props.data.technologies.map(tag => <Tag>{ tag }</Tag>)\r\n  }\r\n\r\n  getEducations() {\r\n    var timelines = this.props.data.educations.map(education =>\r\n      (\r\n        <Timeline.Item dot={<Icon type=\"book\" theme=\"outlined\"/>}>\r\n        <text>{education.date}</text>\r\n        <br/>\r\n        <b>{education.university}</b>\r\n        <br/>\r\n        {education.direction}\r\n      </Timeline.Item>\r\n      )\r\n    );\r\n    return (\r\n      <Timeline>{timelines}</Timeline>\r\n    );\r\n  }\r\n\r\n  getWorkExperiances() {\r\n    var experiences = this.props.data.workExperiances.map(experience =>\r\n      (\r\n        <Timeline.Item dot={<Icon type=\"laptop\" theme=\"outlined\"/>}>\r\n        <text>{experience.date}</text>\r\n        <br/>\r\n        <b>{experience.title}</b>\r\n        <br/>\r\n        {<td dangerouslySetInnerHTML={{__html: experience.about.join('')}} />}\r\n      </Timeline.Item>\r\n      )\r\n    );\r\n    return (\r\n      <Timeline>{experiences}</Timeline>\r\n    );\r\n  }\r\n\r\n  getLanguages() {\r\n    var langs = this.props.data.languages.map(lang =>\r\n      (\r\n        <div>\r\n         <i>{lang.lang}</i> — {lang.level}<br/>\r\n        </div>\r\n      )\r\n    )\r\n    return (\r\n      <div>\r\n        {langs}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content className=\"ContentBlock\">\r\n          <h2>About</h2>\r\n          { this.getAbout() }\r\n          <br/>\r\n          <h2>Key skills</h2>\r\n          <div>\r\n            { this.getSkills() }\r\n          </div>\r\n          <br/>\r\n          <h2>Education</h2>\r\n            { this.getEducations() }\r\n          <h2>Work experience</h2>\r\n          { this.getWorkExperiances() }\r\n          <h2>Languages</h2>\r\n          { this.getLanguages() }\r\n          <br/>\r\n          <h2>Technologies, Tools</h2>\r\n          { this.getTechnologies() }\r\n          <br/>\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CvView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ym from 'react-yandex-metrika';\r\nimport {\r\n  Layout, Menu, Icon\r\n} from 'antd';\r\n\r\nconst { Header, Content, Sider } = Layout;\r\n\r\nclass ContactsView extends Component {\r\n\r\n  onClickContact(type) {\r\n    ym('reachGoal', 'ClickContact', { type: type});\r\n  }\r\n\r\n  getContacts() {\r\n    var contacts = this.props.data.map(contact =>\r\n      (\r\n        <div>\r\n          <Icon type={contact.icon} theme=\"outlined\"/>\r\n          <a href={contact.link} onClick={(e) => this.onClickContact(contact.title)} >{contact.title}</a>\r\n          <br/>\r\n        </div>\r\n      )\r\n    );\r\n    return (\r\n      <div>{contacts}</div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content className=\"ContentBlock\" style={{ marginBottom: \"50px\" }}>\r\n          <h2>Contacts</h2>\r\n          <div>\r\n            { this.getContacts() }\r\n          </div>\r\n        </Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsView;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  Layout, Menu, Icon, Row, Col, Timeline, Tag, Card, Carousel, Divider\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass ProjectsView extends Component {\r\n\r\n  getProjects() {\r\n    return (\r\n      <div>\r\n        <h3>Cliboard Translator</h3>\r\n        <Row>\r\n          <Col span={16} style={{ paddingRight: '20px'}}>\r\n            Android application for translating text from clipboard. Supports translation history, translation from clipboard.<br/>\r\n            Used MVVM architecture pattern, clean architecture for designing app. App is written on 78% koltin.<br/><br/>\r\n            <i>Technologies: </i>RxJava, Google Architecture Components, Dagger, Retrofit, Material Design, JUnit.<br/><br/>\r\n\r\n            <Icon type=\"github\" theme=\"outlined\"/>\r\n            <a href={\"https://github.com/santaevpavel/ClipboardTranslator\"}> View sources on Github</a>\r\n            <br/>\r\n          </Col>\r\n          <Col span={8}>\r\n            <img src={\"./translator.png\"} style={{ width: '100%' }}/>\r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <h3>Aragorn (work in progress)</h3>\r\n        <Row>\r\n          <Col span={24} style={{ paddingRight: '20px'}}>\r\n            PC version of board game <i>Ticket to Ride</i>. Design using clean architecture and clean code. For GUI plan to use JavaFX.<br/><br/>\r\n            <i>Technologies: </i>Kotlin, RxJava, JUnit.<br/><br/>\r\n\r\n            <Icon type=\"github\" theme=\"outlined\"/>\r\n            <a href={\"https://github.com/2mba/aragorn\"}> View sources on Github</a>\r\n            <br/>\r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <h3>QuizTelegramBot</h3>\r\n        <Row>\r\n          <Col span={24} style={{ paddingRight: '20px'}}>\r\n            Experimental telegram bot for playing quiz in telegram chat.<br/><br/>\r\n            <i>Technologies: </i>Kotlin, Ktor.<br/><br/>\r\n\r\n            <Icon type=\"github\" theme=\"outlined\"/>\r\n            <a href={\"https://github.com/santaevpavel/QuizTelegramBot\"}> View sources on Github</a>\r\n            <br/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <Content className=\"ContentBlock\">\r\n          <h2>Projects</h2>\r\n          { this.getProjects() }\r\n          <br/>\r\n        </Content>\r\n  </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectsView;\r\n","import React, { Component } from 'react';\r\nimport scrollToComponent from 'react-scroll-to-component';\r\nimport ym, { YMInitializer } from 'react-yandex-metrika';\r\nimport './App.css';\r\nimport data from './data.json';\r\n\r\nimport HomeView from './HomeView.js';\r\nimport CvView from './CvView.js';\r\nimport ContactsView from './ContactsView.js';\r\nimport ProjectsView from './ProjectsView.js';\r\n\r\nimport {\r\n  Layout, Menu, Icon, BackTop\r\n} from 'antd';\r\n\r\nconst { Header, Content } = Layout;\r\n\r\nclass App extends Component {\r\n\r\n  handleClick = (e) => {\r\n    console.log('click ', e);\r\n    switch (e.key) {\r\n      case '1':\r\n        scrollToComponent(this.refHeader1, { align: 'top' });\r\n        ym('reachGoal', 'ClickMenuHome', {});\r\n        break;\r\n      case '2':\r\n        scrollToComponent(this.refHeader2, { align: 'top' });\r\n        ym('reachGoal', 'ClickMenuAbout', {});\r\n        break;\r\n      case '3':\r\n        scrollToComponent(this.refHeader3, { align: 'top' });\r\n        ym('reachGoal', 'ClickMenuProjects', {});\r\n        break;\r\n      case '4':\r\n        scrollToComponent(this.refHeader4, { align: 'top' });\r\n        ym('reachGoal', 'ClickMenuContacts', {});\r\n        break;\r\n      default:\r\n        alert(\"Illegal id \" + e.key)\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <YMInitializer accounts={[52006883]} />\r\n        <Layout className=\"layout\">\r\n          <Header className=\"Header\">\r\n            <Menu\r\n              className=\"AppMenu\"\r\n              onClick={this.handleClick}\r\n              theme=\"dark\"\r\n              mode=\"horizontal\"\r\n              defaultSelectedKeys={['1']}>\r\n                <Menu.Item key=\"1\">Home</Menu.Item>\r\n                <Menu.Item key=\"2\">About</Menu.Item>\r\n                <Menu.Item key=\"3\">Projects</Menu.Item>\r\n                <Menu.Item key=\"4\">Contacts</Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Content style={{ width: '100%', minWidth: '1200px' }}>\r\n            <HomeView data={data.itemHome} ref={(header) => this.refHeader1 = header}/>\r\n            <CvView data={data.itemCV} ref={(header) => this.refHeader2 = header}/>\r\n            <ProjectsView data={data.itemProjects} ref={(header) => this.refHeader3 = header}/>\r\n            <ContactsView data={data.itemContacts} ref={(header) => this.refHeader4 = header}/>\r\n            <BackTop/>\r\n          </Content>\r\n      </Layout>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}